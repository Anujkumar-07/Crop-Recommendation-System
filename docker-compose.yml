version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: crop-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: crop-recommendation
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - crop-network

  # Node.js Backend Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: crop-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/crop-recommendation?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      ML_SERVICE_URL: http://ml-service:5001
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - ml-service
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - crop-network

  # Python ML Service
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: crop-ml-service
    restart: unless-stopped
    environment:
      PORT: 5001
      DEBUG: "False"
    ports:
      - "5001:5001"
    volumes:
      - ./ml-service:/app
      - ml_model_data:/app/model
    networks:
      - crop-network

  # React Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: crop-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - crop-network

volumes:
  mongodb_data:
    driver: local
  ml_model_data:
    driver: local

networks:
  crop-network:
    driver: bridge
